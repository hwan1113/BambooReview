/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-05-30 14:59:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.hotel;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.json.*;

public final class HotelList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/common/headerCommon.jsp", Long.valueOf(1559199633845L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.json");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/header.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.css\"/>\r\n");
      out.write("<meta name=\"google-signin-client_id\" content=\"401915479611-85lnc5b082en3f07kq9jsd628oshv494.apps.googleusercontent.com\">\r\n");
      out.write("<script\r\n");
      out.write("  src=\"https://code.jquery.com/jquery-3.4.1.js\"\r\n");
      out.write("  integrity=\"sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=\"\r\n");
      out.write("  crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://apis.google.com/js/platform.js?onload=renderButton\" async defer></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("\t\t<header style=\"height:130px\">\r\n");
      out.write("\t\t\t<nav>\r\n");
      out.write("\t\t\t\t<ul class=\"main-nav\">\r\n");
      out.write("\t\t\t\t\t<li class=\"home\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/adminList\">관리자 페이지</a></li>\r\n");
      out.write("\t\t\t\t\t<li class=\"notice\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/price/priceInfo\">가격정보</a></li>\r\n");
      out.write("\t\t\t\t\t<li class=\"board\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/user/userInfo\">내 정보보기</a></li>\r\n");
      out.write("\t\t\t\t\t<li class=\"board\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/user/userLogin\">로그인</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</nav>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t</div>");
      out.write('\r');
      out.write('\n');

	String hotelData = (String)request.getAttribute("hotelData");
	String srchWord  = (String)request.getAttribute("srchWord");
	if(srchWord==null){srchWord="London";}
	hotelData = "{\"results\":"+hotelData+"}";
	JSONObject obj = new JSONObject(hotelData);
	JSONArray HotelArr = obj.getJSONArray("results");	

      out.write("\r\n");
      out.write("<title>Hotel List</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Nanum+Gothic+Coding&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- 시맨틱 UI -->\r\n");
      out.write("<script\r\n");
      out.write("  \tsrc=\"https://code.jquery.com/jquery-3.1.1.min.js\"\r\n");
      out.write("  \tintegrity=\"sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\"\r\n");
      out.write(" \tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/Semantic/semantic.js\"></script>\r\n");
      out.write("<!----------------------------------------------->\r\n");
      out.write("\t<h3 class=\"ui block header centered\">\r\n");
      out.write(" \t \t");
      out.print(srchWord);
      out.write("지역의 호텔 리스트 입니다.\r\n");
      out.write("\t</h3>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"ui visible message\">\r\n");
      out.write("\t\t<p>정렬 방식</p>\r\n");
      out.write("\t\t<div class=\"ui text menu \">\r\n");
      out.write("\t\t\t  <div class=\"header item\">Sort By</div>\r\n");
      out.write("\t\t\t  <a class=\"active item\">\r\n");
      out.write("\t\t\t    Closest\r\n");
      out.write("\t\t\t  </a>\r\n");
      out.write("\t\t\t  <a class=\"item\">\r\n");
      out.write("\t\t\t    Most Comments\r\n");
      out.write("\t\t\t  </a>\r\n");
      out.write("\t\t\t  <a class=\"item\">\r\n");
      out.write("\t\t\t    Most Popular\r\n");
      out.write("\t\t\t  </a>\r\n");
      out.write("\t\t</div>\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
 if(HotelArr.length()==0){ 
      out.write("\r\n");
      out.write("\t\t\t<div>검색결과가 없습니다.</div>\r\n");
      out.write("\t");
 }else {
			for (int i = 0; i < HotelArr.length(); i++){
	
      out.write("\r\n");
      out.write("\t<div class=\"ui grid\">\r\n");
      out.write("\t\t<div class=\"two wide column\"></div>\r\n");
      out.write("\t\t<div class=\"ui items eleven wide column raised very padded text container segment\">\r\n");
      out.write("  \t\t\t<div class=\"item\">\r\n");
      out.write("    \t\t\t<div class=\"image\">\r\n");
      out.write("      \t\t\t\t<img src=\"https://maps.googleapis.com/maps/api/place/photo?photoreference=");
      out.print(HotelArr.getJSONObject(i).getString("photo"));
      out.write("&key=AIzaSyBamfF6Gj9yf1Spt6oL6sX1GB86eMTtI6U&maxheight=70&maxwidth=100\">\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t\t<div class=\"content\">\r\n");
      out.write("     \t\t\t \t<a class=\"header\">");
      out.print(HotelArr.getJSONObject(i).getString("name"));
      out.write("</a>\r\n");
      out.write("     \t\t\t\t <div class=\"meta\">\r\n");
      out.write("        \t\t\t<span>");
      out.print(HotelArr.getJSONObject(i).getString("address") );
      out.write("</span>\r\n");
      out.write("      \t\t\t\t</div>\r\n");
      out.write("      \t\t\t\t<div class=\"description\">\r\n");
      out.write("        \t\t\t<p>편의시설: ");
      out.print(HotelArr.getJSONObject(i).getJSONArray("info").toString());
      out.write("</p>\r\n");
      out.write("      \t\t\t\t</div>\r\n");
      out.write("      \t\t\t\t<div class=\"extra\" data-rating=");
      out.print(HotelArr.getJSONObject(i).getDouble("rate"));
      out.write(" data-max-rating=\"5\"> 평점: \r\n");
      out.write("        \t\t\t");
      out.print(HotelArr.getJSONObject(i).getDouble("rate"));
      out.write("\r\n");
      out.write("      \t\t\t\t</div>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("  \t\t\t</div>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\t<div class=\"three wide column\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t    \t\t\r\n");
      out.write("\t");
		} 
		}
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$('.ui.rating')\r\n");
      out.write(".rating({\r\n");
      out.write("  initialRating: 3,\r\n");
      out.write("  maxRating: 5\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
